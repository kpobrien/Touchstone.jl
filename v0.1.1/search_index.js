var documenterSearchIndex = {"docs":
[{"location":"reference/#Reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"reference/#Touchstone.TouchstoneFile","page":"Reference","title":"Touchstone.TouchstoneFile","text":"TouchstoneFile(f::Vector{Float64},\n    N::Array{Complex{Float64}},\n    frequencyunit::String,\n    parameter::String,\n    format::String,\n    R::Float64,\n    version::Float64,\n    numberofports::Int,\n    twoportdataorder::String,\n    numberoffrequencies::Int,\n    numberofnoisefrequencies::Int,\n    reference::Vector{Float64},\n    information::Vector{String},\n    matrixformat::String,\n    mixedmodeorder::Vector{Tuple{Char, Vector{Int}}},\n    comments::Vector{String},\n    networkdata::Vector{Float64},\n    noisedata::Vector{Float64})\n\nA structure to hold the data contained in a Touchstone file. In most cases, the user will not generate the struct directly. Instead, they will load a Touchstone file with touchstone_load, parse an IOStream or IOBuffer with touchstone_parse, or generate a TouchstoneFile struct with touchstone_file.\n\n\n\n\n\n","category":"type"},{"location":"reference/#Touchstone.arraytonetworkdata-NTuple{11, Any}","page":"Reference","title":"Touchstone.arraytonetworkdata","text":"arraytonetworkdata(frequencies,N, numberofports, numberoffrequencies,\n    matrixformat, twoportdataorder, parameter, frequencyunit, format, R,\n    version)\n\nReturn a vector with a frequency followed by the network data parameters for that frequency.\n\nExamples\n\nfrequencies = 4.0e9:5.0e8:6.0e9\nN = [0.9546262517670427 - 0.296397700700921im;;; 0.8915960960938982 - 0.44358732281729774im;;; 0.9857309246425359 + 0.046691189499470154im;;; 0.9759591344506418 - 0.21128542054786678im;;; 0.9604441706426364 - 0.2762239892126382im]\nnumberofports = 1\nnumberoffrequencies = 5\nmatrixformat = \"Full\"\ntwoportdataorder = \"12_21\"\nparameter = \"S\"\nfrequencyunit = \"GHz\"\nformat = \"MA\"\nR = 50.0\nversion = 2.0\nTouchstone.arraytonetworkdata(frequencies,N, numberofports, numberoffrequencies, \n    matrixformat, twoportdataorder, parameter, frequencyunit, format, R, version)\n\n# output\n15-element Vector{Float64}:\n   4.0\n   0.9995813511383583\n -17.248815971093425\n   4.5\n   0.9958480363660398\n -26.451285931791276\n   5.0\n   0.9868361175866559\n   2.711906450972103\n   5.5\n   0.9985678550072272\n -12.21545548845392\n   6.0\n   0.9993761539770525\n -16.045248853866596\n\nfrequencies = 4.0e9:5.0e8:6.0e9\nN = [0.9546262517670427 - 0.296397700700921im;;; 0.8915960960938982 - 0.44358732281729774im;;; 0.9857309246425359 + 0.046691189499470154im;;; 0.9759591344506418 - 0.21128542054786678im;;; 0.9604441706426364 - 0.2762239892126382im]\nnumberofports = 1\nnumberoffrequencies = 5\nmatrixformat = \"Lower\"\ntwoportdataorder = \"12_21\"\nparameter = \"Z\"\nfrequencyunit = \"GHz\"\nformat = \"MA\"\nR = 50.0\nversion = 2.0\nTouchstone.arraytonetworkdata(frequencies,N, numberofports,\n    numberoffrequencies, matrixformat, twoportdataorder, parameter,\n    frequencyunit, format, R, version)\n\n# output\n15-element Vector{Float64}:\n   4.0\n   0.9995813511383583\n -17.248815971093425\n   4.5\n   0.9958480363660398\n -26.451285931791276\n   5.0\n   0.9868361175866559\n   2.711906450972103\n   5.5\n   0.9985678550072272\n -12.21545548845392\n   6.0\n   0.9993761539770525\n -16.045248853866596\n\nfrequencies = 4.0e9:5.0e8:6.0e9\nN = [0.9546262517670427 - 0.296397700700921im;;; 0.8915960960938982 - 0.44358732281729774im;;; 0.9857309246425359 + 0.046691189499470154im;;; 0.9759591344506418 - 0.21128542054786678im;;; 0.9604441706426364 - 0.2762239892126382im]\nnumberofports = 1\nnumberoffrequencies = 5\nmatrixformat = \"Lower\"\ntwoportdataorder = \"12_21\"\nparameter = \"Z\"\nfrequencyunit = \"GHz\"\nformat = \"MA\"\nR = 50.0\nversion = 1.0\nTouchstone.arraytonetworkdata(frequencies,N, numberofports,\n    numberoffrequencies, matrixformat, twoportdataorder, parameter,\n    frequencyunit, format, R, version)\n\n# output\n15-element Vector{Float64}:\n   4.0\n   0.019991627022767165\n -17.248815971093425\n   4.5\n   0.019916960727320795\n -26.451285931791276\n   5.0\n   0.01973672235173312\n   2.7119064509721027\n   5.5\n   0.019971357100144544\n -12.215455488453918\n   6.0\n   0.019987523079541047\n -16.0452488538666\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.frequencyscale-Tuple{String}","page":"Reference","title":"Touchstone.frequencyscale","text":"frequencyscale(frequencyunit::String)\n\nConvert the SI prefix in the string frequencyunit to the corresponding numerical value.\n\nExamples\n\njulia> Touchstone.frequencyscale(\"MHz\")\n1.0e6\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.isbegininformation-Tuple{String}","page":"Reference","title":"Touchstone.isbegininformation","text":"isbegininformation(line::String)\n\nReturn true if the string line is the [begin information] line of a Touchstone file.\n\nExamples\n\njulia> Touchstone.isbegininformation(\"[begin information]\")\ntrue\n\njulia> Touchstone.isbegininformation(\"[version] 1.0\")\nfalse\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.isend-Tuple{String}","page":"Reference","title":"Touchstone.isend","text":"isend(line::String)\n\nReturn true if the string line is the [end] line of a Touchstone file.\n\nExamples\n\njulia> Touchstone.isend(\"[end]\")\ntrue\n\njulia> Touchstone.isend(\"[version] 1.0\")\nfalse\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.isendinformation-Tuple{String}","page":"Reference","title":"Touchstone.isendinformation","text":"isendinformation(line::String)\n\nReturn true if the string line is the [end information] line of a Touchstone file.\n\nExamples\n\njulia> Touchstone.isendinformation(\"[end information]\")\ntrue\n\njulia> Touchstone.isendinformation(\"[version] 1.0\")\nfalse\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.ismatrixformat-Tuple{String}","page":"Reference","title":"Touchstone.ismatrixformat","text":"ismatrixformat(line::String)\n\nReturn true if the string line is the [matrix format] line of a Touchstone file.\n\nExamples\n\njulia> Touchstone.ismatrixformat(\"[matrix format] full\")\ntrue\n\njulia> Touchstone.ismatrixformat(\"[version] 1.0\")\nfalse\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.ismixedmodeorder-Tuple{String}","page":"Reference","title":"Touchstone.ismixedmodeorder","text":"ismixedmodeorder(line::String)\n\nReturn true if the string line is the [mixed-mode order] line of a Touchstone file.\n\nExamples\n\njulia> Touchstone.ismixedmodeorder(\"[mixed-mode order] full\")\ntrue\n\njulia> Touchstone.ismixedmodeorder(\"[version] 1.0\")\nfalse\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.isnetworkdata-Tuple{String}","page":"Reference","title":"Touchstone.isnetworkdata","text":"isnetworkdata(line::String)\n\nReturn true if the string line is the [network data] line of a Touchstone file.\n\nExamples\n\njulia> Touchstone.isnetworkdata(\"[network data]\")\ntrue\n\njulia> Touchstone.isnetworkdata(\"[version] 1.0\")\nfalse\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.isnoisedata-Tuple{String}","page":"Reference","title":"Touchstone.isnoisedata","text":"isnoisedata(line::String)\n\nReturn true if the string line is the [noise data] line of a Touchstone file.\n\nExamples\n\njulia> Touchstone.isnoisedata(\"[noise data]\")\ntrue\n\njulia> Touchstone.isnoisedata(\"[version] 1.0\")\nfalse\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.isnumberoffrequencies-Tuple{String}","page":"Reference","title":"Touchstone.isnumberoffrequencies","text":"isnumberoffrequencies(line::String)\n\nReturn true if the string line is the [number of frequencies] line of a Touchstone file.\n\nExamples\n\njulia> Touchstone.isnumberoffrequencies(\"[number of frequencies]\")\ntrue\n\njulia> Touchstone.isnumberoffrequencies(\"[version] 1.0\")\nfalse\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.isnumberofnoisefrequencies-Tuple{String}","page":"Reference","title":"Touchstone.isnumberofnoisefrequencies","text":"isnumberofnoisefrequencies(line::String)\n\nReturn true if the string line is the [number of noise frequencies] line of a Touchstone file.\n\nExamples\n\njulia> Touchstone.isnumberofnoisefrequencies(\"[number of noise frequencies]\")\ntrue\n\njulia> Touchstone.isnumberofnoisefrequencies(\"[version] 1.0\")\nfalse\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.isnumberofports-Tuple{String}","page":"Reference","title":"Touchstone.isnumberofports","text":"isnumberofports(line::String)\n\nReturn true if the string line is the [number of ports] line of a Touchstone file.\n\nExamples\n\njulia> Touchstone.isnumberofports(\"[number of ports] 1\")\ntrue\n\njulia> Touchstone.isnumberofports(\"[version] 1.0\")\nfalse\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.isoptionline-Tuple{String}","page":"Reference","title":"Touchstone.isoptionline","text":"isoptionline(line::String)\n\nReturn true if the string line is the option line of a Touchstone file.\n\nExamples\n\njulia> Touchstone.isoptionline(\"# MHz Z MA R 75\")\ntrue\n\njulia> Touchstone.isoptionline(\"[number of ports] 1\")\nfalse\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.isreference-Tuple{String}","page":"Reference","title":"Touchstone.isreference","text":"isreference(line::String)\n\nReturn true if the string line is the [reference] line of a Touchstone file.\n\nExamples\n\njulia> Touchstone.isreference(\"[reference]\")\ntrue\n\njulia> Touchstone.isreference(\"[version] 1.0\")\nfalse\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.istwoportdataorder-Tuple{String}","page":"Reference","title":"Touchstone.istwoportdataorder","text":"istwoportdataorder(line::String)\n\nReturn true if the string line is the [two-port data order] line of a Touchstone file.\n\nExamples\n\njulia> Touchstone.istwoportdataorder(\"[two-port data order] 12_21\")\ntrue\n\njulia> Touchstone.istwoportdataorder(\"[version] 1.0\")\nfalse\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.isversion-Tuple{String}","page":"Reference","title":"Touchstone.isversion","text":"isversion(line::String)\n\nReturn true if the string line is the [version] line of a Touchstone file.\n\nExamples\n\njulia> Touchstone.isversion(\"[version] 1.0\")\ntrue\n\njulia> Touchstone.isversion(\"[number of ports] 1\")\nfalse\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.matrixindices-Tuple{Any, Any, Any}","page":"Reference","title":"Touchstone.matrixindices","text":"matrixindices(nports, format, twoportdataorder)\n\nReturn the cartesian indices of the elements of a scattering matrix given the number of ports nports and the format format which can be \"Full\", \"Upper\", or \"Lower\". The two port data order twoportdataorder can be \"12_21\" or \"21_12\" for 2 ports but must be \"12_21\" for other numbers of ports.\n\nExamples\n\njulia> Touchstone.matrixindices(2,\"Full\",\"12_21\")\n4-element Vector{CartesianIndex{2}}:\n CartesianIndex(1, 1)\n CartesianIndex(1, 2)\n CartesianIndex(2, 1)\n CartesianIndex(2, 2)\n\njulia> Touchstone.matrixindices(2,\"Full\",\"21_12\")\n4-element Vector{CartesianIndex{2}}:\n CartesianIndex(1, 1)\n CartesianIndex(2, 1)\n CartesianIndex(1, 2)\n CartesianIndex(2, 2)\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.matrixindices-Tuple{Any, Any}","page":"Reference","title":"Touchstone.matrixindices","text":"matrixindices(nports, format)\n\nReturn the cartesian indices of the elements of a scattering matrix given the number of ports nports and the format format which can be \"Full\", \"Upper\", or \"Lower\".\n\nExamples\n\njulia> Touchstone.matrixindices(2,\"Full\",printflag=true)\n11 12 \n21 22 \n4-element Vector{CartesianIndex{2}}:\n CartesianIndex(1, 1)\n CartesianIndex(1, 2)\n CartesianIndex(2, 1)\n CartesianIndex(2, 2)\n\njulia> Touchstone.matrixindices(2,\"Upper\",printflag=true)\n11 12 \n   22 \n      3-element Vector{CartesianIndex{2}}:\n CartesianIndex(1, 1)\n CartesianIndex(1, 2)\n CartesianIndex(2, 2)\n\njulia> Touchstone.matrixindices(2,\"Lower\",printflag=true)\n11 \n21 22 \n3-element Vector{CartesianIndex{2}}:\n CartesianIndex(1, 1)\n CartesianIndex(2, 1)\n CartesianIndex(2, 2)\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.networkdatatoarray-NTuple{10, Any}","page":"Reference","title":"Touchstone.networkdatatoarray","text":"networkdatatoarray(networkdata, numberofports, numberoffrequencies,\n    matrixformat, twoportdataorder, parameter, frequencyunit, format, R,\n    version)\n\nExamples\n\nnetworkdata = [4.0, 0.9995813511383583, -17.248815971093425, 4.5, 0.9958480363660398, -26.451285931791276, 5.0, 0.9868361175866559, 2.711906450972103, 5.5, 0.9985678550072272, -12.21545548845392, 6.0, 0.9993761539770525, -16.045248853866596]\nnumberofports = 1\nnumberoffrequencies = 5\nmatrixformat = \"Full\"\ntwoportdataorder = \"12_21\"\nparameter = \"s\"\nfrequencyunit = \"ghz\"\nformat = \"ma\"\nR = 50.0\nversion = 2.0\nfrequencies, N = Touchstone.networkdatatoarray(networkdata,\n    numberofports, numberoffrequencies, matrixformat, twoportdataorder,\n    parameter, frequencyunit, format, R, version)\nprintln(frequencies)\nprintln(N[1,1,:])\n\n# output\n[4.0e9, 4.5e9, 5.0e9, 5.5e9, 6.0e9]\nComplexF64[0.9546262517670427 - 0.296397700700921im, 0.8915960960938982 - 0.44358732281729774im, 0.9857309246425359 + 0.04669118949947016im, 0.9759591344506418 - 0.21128542054786678im, 0.9604441706426364 - 0.2762239892126382im]\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.parseinformation!-Tuple{Vector{String}, Vector{String}, IO}","page":"Reference","title":"Touchstone.parseinformation!","text":"parseinformation!(information::Vector{String},io::IO)\n\nAppend the contents of the information section of a Touchstone file from the IOBuffer or IOStream io to the vector information.\n\nExamples\n\ninformation = String[]\ncomments = String[]\nio = IOBuffer(\"This is an information section.\n[End Information]\")\nTouchstone.parseinformation!(information,comments,io)\nprintln(information)\n\n# output\n[\"this is an information section.\"]\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.parsematrixformat-Tuple{String}","page":"Reference","title":"Touchstone.parsematrixformat","text":"parsematrixformat(line::String)\n\nReturn the two-port data order string parsed from the [two-port data order] line of a Touchstone file.\n\nExamples\n\njulia> Touchstone.parsematrixformat(\"[matrix format] lower\")\n\"Lower\"\n\njulia> Touchstone.parsematrixformat(\"[matrix format] upper\")\n\"Upper\"\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.parsemixedmodeorder!-Tuple{Vector{Tuple{Char, Vector{Int64}}}, String}","page":"Reference","title":"Touchstone.parsemixedmodeorder!","text":"parsemixedmodeorder!(mixedmodeorder::Vector{Tuple{Char, Vector{Int}}},\n    line::String)\n\nAppend the contents of the [mixed-mode order] line of a Touchstone file from the to the vector mixedmodeorder.\n\nExamples\n\njulia> mixedmodeorder = Tuple{Char, Vector{Int}}[];Touchstone.parsemixedmodeorder!(mixedmodeorder,\"[Mixed-Mode Order] D2,3 D6,5 C2,3 C6,5 S4 S1\");mixedmodeorder\n6-element Vector{Tuple{Char, Vector{Int64}}}:\n ('D', [2, 3])\n ('D', [6, 5])\n ('C', [2, 3])\n ('C', [6, 5])\n ('S', [4])\n ('S', [1])\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.parsenetworkdata!-Tuple{Vector{Float64}, Vector{String}, IO}","page":"Reference","title":"Touchstone.parsenetworkdata!","text":"parsenetworkdata!(networkdata::Vector{Float64}, comments::Vector{String}, io::IO)\n\nAppend the contents of the networkdata section of a Touchstone file from the IOBuffer or IOStream io to the vector networkdata.\n\nExamples\n\nnetworkdata = Float64[]\ncomments = String[]\nio = IOBuffer(\"1.0000 0.3926 -0.1211 -0.0003 -0.0021 -0.0003 -0.0021 0.3926 -0.1211\n2.0000 0.3517 -0.3054 -0.0096 -0.0298 -0.0096 -0.0298 0.3517 -0.3054\n10.000 0.3419 0.3336 -0.0134 0.0379 -0.0134 0.0379 0.3419 0.3336\")\nTouchstone.parsenetworkdata!(networkdata,comments,io)\nprintln(networkdata)\n\n# output\n[1.0, 0.3926, -0.1211, -0.0003, -0.0021, -0.0003, -0.0021, 0.3926, -0.1211, 2.0, 0.3517, -0.3054, -0.0096, -0.0298, -0.0096, -0.0298, 0.3517, -0.3054, 10.0, 0.3419, 0.3336, -0.0134, 0.0379, -0.0134, 0.0379, 0.3419, 0.3336]\n\nnetworkdata = Float64[]\ncomments = String[]\nio = IOBuffer(\"2 .95 -26 3.57 157 .04 76 .66 -14\n22 .60 -144 1.30 40 .14 40 .56 -85\n! NOISE PARAMETERS\n4 .7 .64 69 .38\n18 2.7 .46 -33 .40\")\nTouchstone.parsenetworkdata!(networkdata,comments,io)\nprintln(networkdata)\n\n# output\n[2.0, 0.95, -26.0, 3.57, 157.0, 0.04, 76.0, 0.66, -14.0, 22.0, 0.6, -144.0, 1.3, 40.0, 0.14, 40.0, 0.56, -85.0]\n\nnetworkdata = Float64[]\ncomments = String[]\nio = IOBuffer(\"2 .95 -26 3.57 157 .04 76 .66 -14\n22 .60 -144 1.30 40 .14 40 .56 -85\n[Noise Data]\n4 .7 .64 69 19\n18 2.7 .46 -33 20\n[End]\")\nTouchstone.parsenetworkdata!(networkdata,comments,io)\nprintln(networkdata)\n\n# output\n[2.0, 0.95, -26.0, 3.57, 157.0, 0.04, 76.0, 0.66, -14.0, 22.0, 0.6, -144.0, 1.3, 40.0, 0.14, 40.0, 0.56, -85.0]\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.parsenoisedata!-Tuple{Any, Any, Any}","page":"Reference","title":"Touchstone.parsenoisedata!","text":"parsenoisedata!(noisedata::Vector{Float64}, comments::Vector{String},\n    io::IO)\n\nAppend the contents of the networkdata section of a Touchstone file from the IOBuffer or IOStream io to the vector networkdata.\n\nExamples\n\nnetworkdata = Float64[]\nnoisedata = Float64[]\ncomments = String[]\nio = IOBuffer(\"1.0000 0.3926 -0.1211 -0.0003 -0.0021 -0.0003 -0.0021 0.3926 -0.1211\n2.0000 0.3517 -0.3054 -0.0096 -0.0298 -0.0096 -0.0298 0.3517 -0.3054\n10.000 0.3419 0.3336 -0.0134 0.0379 -0.0134 0.0379 0.3419 0.3336\")\nTouchstone.parsenetworkdata!(networkdata,comments,io)\nTouchstone.parsenoisedata!(noisedata,comments,io)\nprintln(noisedata)\n\n# output\nFloat64[]\n\nnetworkdata = Float64[]\nnoisedata = Float64[]\ncomments = String[]\nio = IOBuffer(\"2 .95 -26 3.57 157 .04 76 .66 -14\n22 .60 -144 1.30 40 .14 40 .56 -85\n! NOISE PARAMETERS\n4 .7 .64 69 .38\n18 2.7 .46 -33 .40\")\nTouchstone.parsenetworkdata!(networkdata,comments,io)\nTouchstone.parsenoisedata!(noisedata,comments,io)\nprintln(noisedata)\n\n# output\n[4.0, 0.7, 0.64, 69.0, 0.38, 18.0, 2.7, 0.46, -33.0, 0.4]\n\nnetworkdata = Float64[]\nnoisedata = Float64[]\ncomments = String[]\nio = IOBuffer(\"2 .95 -26 3.57 157 .04 76 .66 -14\n22 .60 -144 1.30 40 .14 40 .56 -85\n[Noise Data]\n4 .7 .64 69 19\n18 2.7 .46 -33 20\n[End]\")\nTouchstone.parsenetworkdata!(networkdata,comments,io)\nTouchstone.parsenoisedata!(noisedata,comments,io)\nprintln(noisedata)\n\n# output\n[4.0, 0.7, 0.64, 69.0, 19.0, 18.0, 2.7, 0.46, -33.0, 20.0]\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.parsenumberoffrequencies-Tuple{String}","page":"Reference","title":"Touchstone.parsenumberoffrequencies","text":"parsenumberoffrequencies(line::String)\n\nReturn the number of frequencies parsed from the [number of frequencies] line of a Touchstone file.\n\nExamples\n\njulia> Touchstone.parsenumberoffrequencies(\"[number of frequencies] 10\")\n10\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.parsenumberofnoisefrequencies-Tuple{String}","page":"Reference","title":"Touchstone.parsenumberofnoisefrequencies","text":"parsenumberofnoisefrequencies(line::String)\n\nReturn the number of noise frequencies parsed from the [number of noise frequencies] line of a Touchstone file.\n\nExamples\n\njulia> Touchstone.parsenumberofnoisefrequencies(\"[number of noise frequencies] 10\")\n10\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.parsenumberofports-Tuple{String}","page":"Reference","title":"Touchstone.parsenumberofports","text":"parsenumberofports(line::String)\n\nReturn the number of ports parsed from the [number of ports] line of a Touchstone file.\n\nExamples\n\njulia> Touchstone.parsenumberofports(\"[number of ports] 1\")\n1\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.parseoptionline-Tuple{String}","page":"Reference","title":"Touchstone.parseoptionline","text":"parseoptionline(line::String)\n\nReturn a struct TouchstoneOptionLine which contains the option line of a Touchstone file.\n\nExamples\n\njulia> Touchstone.parseoptionline(\"# MHz Z MA R 75\")\nTouchstone.TouchstoneOptionLine(\"MHz\", \"Z\", \"MA\", 75.0)\n\njulia> Touchstone.parseoptionline(\"# MHz H RI R 75\")\nTouchstone.TouchstoneOptionLine(\"MHz\", \"H\", \"RI\", 75.0)\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.parsereference!-Tuple{Vector{Float64}, Vector{String}, String, Int64, IO}","page":"Reference","title":"Touchstone.parsereference!","text":"parsereference!(reference::Vector{Float64}, comments::Vector{String},\n    line::String, numberofports::Int, io::IO)\n\nAppend the contents of the [reference] section of a Touchstone file from the IOBuffer or IOStream io to the vector reference. The reference impedance values can be spread across multiple lines.\n\nExamples\n\nio = IOBuffer(\"[Reference] 50.0 60.0 75.0\")\nnumberofports = 3\ncomments = String[]\nreference = Float64[]\nline = Touchstone.stripcommentslowercase!(comments,readline(io))\nTouchstone.parsereference!(reference, comments, line, numberofports, io)\nprintln(reference)\n\n# output\n[50.0, 60.0, 75.0]\n\nio = IOBuffer(\"[Reference] 50.0 \n60.0 75.0\")\nnumberofports = 3\ncomments = String[]\nreference = Float64[]\nline = Touchstone.stripcommentslowercase!(comments,readline(io))\nTouchstone.parsereference!(reference, comments, line, numberofports, io)\nprintln(reference)\n\n# output\n[50.0, 60.0, 75.0]\n\nio = IOBuffer(\"[Reference] 50.0 \n60.0 75.0\n[Number of Frequencies] 1\")\nnumberofports = 3\ncomments = String[]\nreference = Float64[]\nline = Touchstone.stripcommentslowercase!(comments,readline(io))\nTouchstone.parsereference!(reference, comments, line, numberofports, io)\nprintln(reference)\n\n# output\n[50.0, 60.0, 75.0]\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.parsetwoportdataorder-Tuple{String}","page":"Reference","title":"Touchstone.parsetwoportdataorder","text":"parsetwoportdataorder(line::String)\n\nReturn the two-port data order string parsed from the [two-port data order] line of a Touchstone file.\n\nExamples\n\njulia> Touchstone.parsetwoportdataorder(\"[two-port data order] 12_21\")\n\"12_21\"\n\njulia> Touchstone.parsetwoportdataorder(\"[two-port data order] 21_12\")\n\"21_12\"\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.parseversion-Tuple{String}","page":"Reference","title":"Touchstone.parseversion","text":"parseversion(line::String)\n\nReturn the version parsed from the [version] line of a Touchstone file.\n\nExamples\n\njulia> Touchstone.parseversion(\"[version] 1.0\")\n1.0\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.stripcommentslowercase!-Tuple{Vector{String}, String}","page":"Reference","title":"Touchstone.stripcommentslowercase!","text":"stripcommentslowercase!(comments::Vector{String},line::String)\n\nAppend the comment portion of a line line of a Touchstone file to the vector comments. Return the line with the comments removed and made lowercase.\n\nExamples\n\njulia> comments=String[];println(Touchstone.stripcommentslowercase!(comments,\"! This is a comment\"));println(comments)\n\n[\" This is a comment\"]\n\njulia> comments=String[];println(Touchstone.stripcommentslowercase!(comments,\"This is a !comment\"));println(comments)\nthis is a \n[\"comment\"]\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.touchstone_file-Tuple{AbstractVector{Float64}, Array{ComplexF64, 3}}","page":"Reference","title":"Touchstone.touchstone_file","text":"touchstone_file(f::Vector{Float64}, N::Array{Complex{Float64}};\n    frequencyunit::String = \"GHz\",\n    parameter::String = \"S\",\n    format::String = \"MA\",\n    R::Float64 = 50.0,\n    version::Float64 = 2.0,\n    twoportdataorder::String = \"\",\n    numberofnoisefrequencies::Int = 0,\n    reference::Vector{Float64} = Float64[],\n    information::Vector{String} = String[],\n    matrixformat::String = \"Full\",\n    mixedmodeorder::Vector{Tuple{Char, Vector{Int}}} = Tuple{Char, Vector{Int}}[],\n    comments::Vector{String} = String[],\n    noisedata::Vector{Float64} = Float64[])\n\nGenerate a TouchstoneFile struct from the frequency vector f in units of Hz and the complex network data array N where the frequency axis is the last dimension. All other arguments are optional.\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.touchstone_load-Tuple{Any}","page":"Reference","title":"Touchstone.touchstone_load","text":"touchstone_load(filename)\n\nRead a file in the Touchstone format. Standard compliant.\n\nReferences to the 1.1 spec and the 2.0 spec.\n\nOutputs un-normalized network parameters with frequency units of Hz. Don't enforce any particular file extension or try to infer the number of ports from the extension.\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.touchstone_parse-Tuple{IO}","page":"Reference","title":"Touchstone.touchstone_parse","text":"touchstone_parse(io::IO)\n\nParse the Touchstone file described by the IOBuffer or IOStream io.\n\nReferences to the 1.1 spec and the 2.0 spec.\n\nExamples\n\nstr=\"!Example 1:\n!1-port S-parameter file, single frequency point\n# MHz S MA R 50\n!freq magS11 angS11\n2.000 0.894 -12.136\";\nprintln(str);\nTouchstone.touchstone_parse(IOBuffer(str))\n\n# output\n!Example 1:\n!1-port S-parameter file, single frequency point\n# MHz S MA R 50\n!freq magS11 angS11\n2.000 0.894 -12.136\nTouchstone.TouchstoneFile([2.0e6], ComplexF64[0.874020294860635 - 0.18794819544685323im;;;], \"mhz\", \"s\", \"ma\", 50.0, 1.0, 1, \"12_21\", 1, 0, [50.0], String[], \"Full\", Tuple{Char, Vector{Int64}}[], [\"Example 1:\", \"1-port S-parameter file, single frequency point\", \"freq magS11 angS11\"], [2.0, 0.894, -12.136], Float64[])\n\nstr=\"!Example 4 (Version 2.0):\n! 4-port S-parameter data\n! Default impedance is overridden by [Reference]\n! Data cannot be represented using 1.0 syntax\n! Note that the [Reference] keyword arguments appear on a separate line\n[Version] 2.0\n# GHz S MA R 50\n[Number of Ports] 4\n[Reference]\n50 75 0.01 0.01\n[Number of Frequencies] 1\n[Network Data]\n5.00000 0.60 161.24 0.40 -42.20 0.42 -66.58 0.53 -79.34 !row 1\n0.40 -42.20 0.60 161.20 0.53 -79.34 0.42 -66.58 !row 2\n0.42 -66.58 0.53 -79.34 0.60 161.24 0.40 -42.20 !row 3\n0.53 -79.34 0.42 -66.58 0.40 -42.20 0.60 161.24 !row 4\";\nprintln(str);\nTouchstone.touchstone_parse(IOBuffer(str))\n\n# output\n!Example 4 (Version 2.0):\n! 4-port S-parameter data\n! Default impedance is overridden by [Reference]\n! Data cannot be represented using 1.0 syntax\n! Note that the [Reference] keyword arguments appear on a separate line\n[Version] 2.0\n# GHz S MA R 50\n[Number of Ports] 4\n[Reference]\n50 75 0.01 0.01\n[Number of Frequencies] 1\n[Network Data]\n5.00000 0.60 161.24 0.40 -42.20 0.42 -66.58 0.53 -79.34 !row 1\n0.40 -42.20 0.60 161.20 0.53 -79.34 0.42 -66.58 !row 2\n0.42 -66.58 0.53 -79.34 0.60 161.24 0.40 -42.20 !row 3\n0.53 -79.34 0.42 -66.58 0.40 -42.20 0.60 161.24 !row 4\nTouchstone.TouchstoneFile([5.0e9], ComplexF64[-0.5681244079815996 + 0.1929628385351877im 0.29632183851470006 - 0.2686882357291961im 0.16693665375723588 - 0.38539869438327984im 0.09803970583787712 - 0.5208533537179372im; 0.29632183851470006 - 0.2686882357291961im -0.5679895560694177 + 0.1933594171383067im 0.09803970583787712 - 0.5208533537179372im 0.16693665375723588 - 0.38539869438327984im; 0.16693665375723588 - 0.38539869438327984im 0.09803970583787712 - 0.5208533537179372im -0.5681244079815996 + 0.1929628385351877im 0.29632183851470006 - 0.2686882357291961im; 0.09803970583787712 - 0.5208533537179372im 0.16693665375723588 - 0.38539869438327984im 0.29632183851470006 - 0.2686882357291961im -0.5681244079815996 + 0.1929628385351877im;;;], \"ghz\", \"s\", \"ma\", 50.0, 2.0, 4, \"12_21\", 1, 0, [50.0, 75.0, 0.01, 0.01], String[], \"Full\", Tuple{Char, Vector{Int64}}[], [\"Example 4 (Version 2.0):\", \" 4-port S-parameter data\", \" Default impedance is overridden by [Reference]\", \" Data cannot be represented using 1.0 syntax\", \" Note that the [Reference] keyword arguments appear on a separate line\", \"row 1\", \"row 2\", \"row 3\", \"row 4\"], [5.0, 0.6, 161.24, 0.4, -42.2, 0.42, -66.58, 0.53, -79.34, 0.4  …  0.4, -42.2, 0.53, -79.34, 0.42, -66.58, 0.4, -42.2, 0.6, 161.24], Float64[])\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.touchstone_save-Tuple{String, AbstractVector, AbstractArray}","page":"Reference","title":"Touchstone.touchstone_save","text":"touchstone_save(filename::String,frequencies::AbstractArray,\n    N::AbstractArray;version=1.0,reference=[50.0,50.0],R = 50.0,format=\"RI\",\n    comments=[\"\"],twoportdataorder=\"12_21\",matrixformat=\"Full\",frequencyunit=\"Hz\")\n\nWrite a file in the Touchstone format. Standards compliant except does not support writing noise data.\n\nReferences to the 1.1 spec and the 2.0 spec.\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.touchstone_write-Tuple{IO, AbstractVector{Float64}, Array{ComplexF64, 3}}","page":"Reference","title":"Touchstone.touchstone_write","text":"touchstone_write(io::IO, frequencies::AbstractVector, N::AbstractArray;\n    version=1.0, reference=[50.0,50.0], R = 50.0, format=\"RI\",\n    parameter = \"S\", comments=[\"\"], twoportdataorder=\"12_21\",\n    matrixformat=\"Full\", frequencyunit=\"Hz\")\n\nWrite a Touchstone file to the IOStream or IOBuffer io.\n\nExamples\n\njulia> io = IOBuffer();Touchstone.touchstone_write(io, [1.0e9, 2.0e9, 10.0e9], [0.3926 - 0.1211im -0.0003 - 0.0021im; -0.0003 - 0.0021im 0.3926 - 0.1211im;;; 0.3517 - 0.3054im -0.0096 - 0.0298im; -0.0096 - 0.0298im 0.3517 - 0.3054im;;; 0.3419 + 0.3336im -0.0134 + 0.0379im; -0.0134 + 0.0379im 0.3419 + 0.3336im];version=1.0,R=50.0,format=\"RI\",frequencyunit=\"Hz\",comments=[\"Example 4:\",\"2-port S-parameter file, three frequency points\"]);println(String(take!(io)))\n!Example 4:\n!2-port S-parameter file, three frequency points\n# Hz S RI R 50.0\n! freq ReS11 ImS11 ReS21 ImS21 ReS12 ImS12 ReS22 ImS22 \n1.0e9 0.3926 -0.1211 -0.0003 -0.0021 -0.0003 -0.0021 0.3926 -0.1211\n2.0e9 0.3517 -0.3054 -0.0096 -0.0298 -0.0096 -0.0298 0.3517 -0.3054\n1.0e10 0.3419 0.3336 -0.0134 0.0379 -0.0134 0.0379 0.3419 0.3336\n\njulia> io = IOBuffer();Touchstone.touchstone_write(io, [1.0e9, 2.0e9, 10.0e9], [0.3926 - 0.1211im -0.0003 - 0.0021im; -0.0003 - 0.0021im 0.3926 - 0.1211im;;; 0.3517 - 0.3054im -0.0096 - 0.0298im; -0.0096 - 0.0298im 0.3517 - 0.3054im;;; 0.3419 + 0.3336im -0.0134 + 0.0379im; -0.0134 + 0.0379im 0.3419 + 0.3336im];version=2.0,R=50.0,format=\"RI\",frequencyunit=\"Hz\",comments=[\"Example 4:\",\"2-port S-parameter file, three frequency points\"]);println(String(take!(io)))\n!Example 4:\n!2-port S-parameter file, three frequency points\n[Version] 2.0\n# Hz S RI R 50.0\n[Number of Ports] 2\n[Two-Port Data Order] 12_21\n[Number of Frequencies] 3\n[Reference] 50.0 50.0\n[Network Data]\n! freq ReS11 ImS11 ReS12 ImS12 ReS21 ImS21 ReS22 ImS22 \n1.0e9 0.3926 -0.1211 -0.0003 -0.0021 -0.0003 -0.0021 0.3926 -0.1211\n2.0e9 0.3517 -0.3054 -0.0096 -0.0298 -0.0096 -0.0298 0.3517 -0.3054\n1.0e10 0.3419 0.3336 -0.0134 0.0379 -0.0134 0.0379 0.3419 0.3336\n[End]\n\n\n\n\n\n","category":"method"},{"location":"reference/#Touchstone.touchstone_write-Tuple{IO, Touchstone.TouchstoneFile}","page":"Reference","title":"Touchstone.touchstone_write","text":"touchstone_write(io::IO, ts::TouchstoneFile)\n\nWrite a Touchstone file specified by the TouchstoneFile object ts to the IOStream or IOBuffer io.\n\n\n\n\n\n","category":"method"}]
}
